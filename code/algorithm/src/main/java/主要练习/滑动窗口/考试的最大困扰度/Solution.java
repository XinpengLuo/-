package 主要练习.滑动窗口.考试的最大困扰度;

public class Solution {

    public void getAllSolutions(String answerKey, int maxNumber, int k){
        int j = 0;
        int countT = 0;
        int countF = 0;
        for(int i = 0; i < answerKey.length(); i++){
            char temp = answerKey.charAt(i);
            if(temp == 'T')
                countT++;
            else
                countF++;
            if(i >= maxNumber - 1){
                if(countT <= k || countF <= k)
                    if(countT < countF)
                        getSolutions(answerKey,i,j,true);
                    else
                        getSolutions(answerKey,i,j,false);
                if(answerKey.charAt(j) == 'T')
                    countT--;
                else
                    countF--;
                j++;
            }
        }
    }
    public String getSolutions(String answerKey, int i, int j, boolean flag){
        //flag true --> modify false
        StringBuilder sb = new StringBuilder();
        sb.append("[");
        for(int index = j; index <= i; index++){
            if((flag && answerKey.charAt(index) == 'T') || (!flag && answerKey.charAt(index) == 'F'))
                sb.append(index + ",");
        }
        sb.append("]");
        System.out.println(sb.toString());
        return sb.toString();
    }
    public int maxConsecutiveAnswers(String answerKey, int k) {
        int countT = 0;
        int countF = 0;
        int j = 0;
        int res = 0;
        int count = 0;
        for(int i = 0; i < answerKey.length(); i++){
            char temp = answerKey.charAt(i);
            if(temp == 'T')
                countT++;
            else
                countF++;
            while(countF > k && countT > k){
                if(answerKey.charAt(j) == 'T')
                    countT--;
                else
                    countF--;
                j++;
            }
            res = Math.max(i - j + 1, res);
        }
        return res;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        String test = "TTTFFFTFFTFFTFFTFFTFFFFTFFFFTFTFFFTFTFTFFTFTFFFFFTTTFTTTTTTTTTFFFTTTTTTTTFTFTFTTFTTFTTTFTFFTTTTFTTFTFFTFTTTTTFFTTTTFFTTTFFFTFFTTFTFFFFFTFTTFTTFFFTTTTTFFFFTTFTTTTTTTTTTFTFTTFFFFTTFFFFTTTTFFTTFFFFTTTFTFTTFTTTFTTFTTTFFTFFTTFTTTFFTFTTTTFFTTTTTFFTFFFTFTFTTTTTFFFTTTTTTTTTTTFFTTTTTFTFTFFFFTTTTFTTFFFTTTFTFFTTTFFTFFTFTTFFTFFFFFFTTTTFTFFTFFTTFTTFTFFTFTTTTTFTFTFTFTTTTTFTTTTFTTFTTTTTTTTTTFFTFFFTTTTFFTFTTTTFTTTTTTTFFTTFTTTTTFTTTTFTFTTTFTFTFTTTFFFTFTFTFTFFTFTTFTFTTFTTFTTFTTFTTFFTFTFFFFTTTTFTTFTFTFTTFTTFTFTTTTTTFFFTFFFTTFTTFFFFTTTTTTFFTTTTFTFFFFTFTFTTTFFFTTTTFFTTTTFTFFFTTTTFTFTTTTFTFFTFFFTTTTFFTTFTTFFTFTTTFFFFFTFTTFTTFTTTTFTTTTFTTTTFFTFTTFTFFFTTTTFFTTFTFTFTFFFTFFFFFTFFFTTFTFTFFFTTTTFTFTTTTFTFFTFTFTTFTTTTTTTFFFFFFFTFTFTFFFTTFFFFFTTTTTFTFTTTTTFFTFTFFFTFFTTTTFFFTTTFTTTFTTFTTTTTTFFTTFFFTTFTTTFFTTFFFTTFTTTTTTFFFTTFTFTFTTTTTFTTFFTTTTFTFFFTTTFFFFTTTFFTFTFFFFFTFTTFFFTFTFFFTTTTFTFFFFTFTTTTTFFTTFTTTFTTTTTTFTTTFTFFFFFFFFFTFFFTFTFTFTTTTTTTTFFFFTTFTTTFFFFTTTFFTTFTFFFTFTTTFTFFFTTTTTTTTTFTTTFTTFTFFTFFTTTTTTFFFTTFFFTFTTTTFTFTTFTTTFTTFFFTTFTTTFTFTTTTTFTFFFFTTFFFTTFTTFFTTTFTFTFTFTTFTFTFFFTFTFFTTFTTTTTTFTFFFTFFTFFFFTFTTTFTTFTTTTFFFTFFTTTTTTFTTTTTFFTFTTFFTFFFTFFFFFTFFTTFFTTTFFTTFFTFTFTTTTTTFFFFTTFTFTTTFTTFFTFFFTFTTFFTTTTFFFTFFTTFFTTFTFTTTFTTFTFFTTTFTFTTTTFFTTTTFFFTFTFTFFTTFTFFFTTFTFTTTTFFFTFFTFTFTFTFTTFTFFTFFTFTFTTFTTTTTTFFFTTFFFFFTFTFTFTTTTFTTFFFTTTFFTTFFTTTTTTFFTTFTFTTTFFFFTTTFFTTFTFFFTTFFFTFFTTTTFFTTFTTTTTFFTTFTTFTTTTTFTTTTTTTFFFTFFTTFFTTFFFTTFTFTTTTTTTFFTFTFTTTTTFTFFTTFFTFFFTTFFTTFFTFTTTTTTTTFTFFFTTFTTTTTTTTFTTTTTFTFFTTTTFFTFTTFFTFFFTTTTFFTTTFTFTTTTTFTFTFTFTTTTTTTFTTFFTTTFFFFTFFTFTTTFTFFFFTTFTFFFFFFFTFTFTFTTTTTTTFFFTTTFFTFFTFFTTFTFTFTTFFTTTTFTTFTFTFFTTTTFTTTTTTFFFTFFTFFFTTFFFTFFFTTTTFFTFTTTTTFFFTFTTTTFTFTFTTTFTFTFFTFTFTFTFTTFTTTTFTTTFTFTFFTFTTFTFTTTFTFTTFTFTTTFFTTFTTFFTFFTFTTTTFFFFTTFTTFTTTFTTFFTFTTTFFFTTFFFTTTFTTFTTFFFFFFTTTFFTFFTTFTFTFTFTTFFFFTTFFTFFTFFTTFFTTFTFTTFTTFFTTTTFTFTTTFFFTTFTTFTTTTTFFFFFTTFTTFTFFFTTFTTTTFFTFFFTTTTFTFTTFTTTFTTTTFFFFTTFTFTTTFFFFFTTTTTFTFFTTFTFFFFTFFTFTFFFTTTTTFTFTTTTTFFTTFTTTTFFTTTFTFFFTFFFTTTFFFTTFTTFTTTFFFTFTTFTTTTFTTFTTTTTTFFFFTTTFFTTTFFFFTFTTTTTFFFFFFTFFTTFFTFFFTTFTFFTTTTFFFFFFTTFFFFFFTFFTFFTFTFTFTTTFTTTFFTTFTTFTTTTTFTFTTFTTTFFFFTTFTTTTFTTFTTTTTTFFFTTFTFTTFTFTFTTFTTFFFFFTTFTTFTFFTTTTTTFFFFFTTFTFTTFTTFTFFTTFFTFTTFTTTFFTTFTTTFFFTTTFFTTTTTTTTTFFFTTTTFTTTTFTFFTTTTTTTFTTTTTFFTFTTFTFTTFFTTFFFTTFTTFFFFTTTTFTFTFTFTTFFTTTTFFTTFTTFTTTFTTFFTTTTFTTFTTTTFTFTFTTFTFFFFTTFTTFFFFFTFFTTTFFTTTTFTFTTTFTTTFFTFTFFFFTTFFTFTTTFTTFFFTTTFFTFFTFFTFFFFFTTFFFTTTTTFFTTFFFFTTTTFTTTTTTFFTTFFFTFFFTTFFFTFFFTFFFFFTTFFFTFTFTTFTTTTTTTFFTFTFFFFFTFTFFFTTFFTTFTTTFTTFFTTFTTFTFTTTFTTTTTTTFTTTFFTTFTFTFTFTFTTTTTFFTFFTFFTFFTFTTFFTTTTTTTTTTFTFTTTFTTTFFFFFTFTTTTFFFTTTTTFTTFFFTTTFTTTFTTFFFFFFFFFTTFFFTTFTTTTTFFTFFFTTTTFFFFTFFTFTTFFFTFTTTFTFTFTTTFTTFTFTTTTTTTTTTTFTTFTTFTFFFFTFTTTTFTTFFTTTTFTTFFTFFFTTFFFFTFFTFFTTTTTFFTTTTTFTTFFFTFTTFTFTTTTFTTTTTTFTFTFTTTTTTTFFFFTFTFFTTTFTTTFTTFTTFFTFFFFFTFTTTTTFFTFTTTFTFTFTTTFTTTFFFFTTTFTFFTTTTFTFFTFFFFTFFFTTFTFTFTTFTTTTFTFFFTFTTFTTTFFTFTFTTFFFTTTFFFFFFTFTFFFTTTT";
        solution.getAllSolutions(test,30, 6);
    }
}
